140000*1.03^5
3200 * .97^5
123.70+50+12.62+224.74
247.40+36+168.17
247.40+36+168.17+20.67+50
cdf
cdf()
cdf()
source('01_example.r')
G$vertex
get.vertex.attribute(G, 'pmid', 1)
V(G)
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name='pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute_name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with ", attribute_name,"==",attribute_value, '\n', sep='')#
    }#
}
#
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name='pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with ", attribute.name,"==",attribute.value, '\n', sep='')#
    }#
}
#
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name='pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with ", attribute.name,"==",attribute.value, '\n', sep='')#
    }#
}
#
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name='pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with ", attribute.name,"==",attribute.value, '\n', sep='')#
    }#
}
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name ){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with ", attribute.name,"==",attribute.value, '\n', sep='')#
    }#
}
library(igraph)#
#
# take a graph and create a layout #
#
gimme.layout<- function(G) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y))/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- layout.spring(G)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
} #
#
#
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    else{#
        cat("Found no vertex with the specified attribute\n")#
    }#
}#
#
#
#
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    #
    small.g <- subgraph(G, c(rct,obs))#
    summary(small.g)#
    #
}
get.verdex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if (get.vertex.attribute(G, attribute.name, i) == attribute.value){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.verdex.index.from.attribute(G,1234)
get.vertex.attribute(G, 'pmid', 1)
string(1)
str(1)
"1"
("1"==str(1))
("1"==1)
("1"==1)
("1"==10)
("01"==1)
("1"==1)
get.verdex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        if ((get.vertex.attribute(G, attribute.name, i) == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.vertex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.vertex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        print att#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 1:length(vertices)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        print(att)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.vertex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 0:(length(vertices)-1)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        print(att)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}
get.vertex.index.from.attribute(G,'1234')
get.vertex.index.from.attribute(G,'1234')get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 0:(length(vertices)-1)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute(", attribute.name,"==", attribute.value,"\n", sep='')#
    return(NULL)#
}
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
    #
    v.list <- []#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
    #
    v.list <- []#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
    #
    v.list <- []#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs(G)
library(igraph)#
#
# take a graph and create a layout #
#
gimme.layout<- function(G) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y))/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- layout.spring(G)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
} #
#
#
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 0:(length(vertices)-1)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}#
#
#
#
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs(G)
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- G$rct_pmid_list#
    obs <- G$obs_pmid_list#
    all.studies <- c(rct, obs)#
#
    print(all.studies)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs(G)
G$rct_pmid_list
as.list(G$rct_pmid_list)
as.list(G$rct_pmid_list)
get.vertex.attribute(G, 'is_rct', i)
get.vertex.attribute(G, 'index', i)
get.vertex.attribute(G, 'is_index', i)
get.vertex.attribute(G, 'is_index', 3)
c(1,2,3)
G$obs_pmid_list
S<-G$obs_pmid_list
split(S)
?split
?string
?str
??string
first.word
??string
?regex
?strsplit
strsplit(S, "', ")
substr(S,"[']")
subinstr(S,"[']")
S
?regex
sub(S,"['")
sub("['","", S)
sub("\['","", S)
sub("/['","", S)
sub("\['","", S)
sub("['","", S)
sub("'","", S)
sub("\[","", S)
sub("'","", S)
strsplit(S, "[")
strsplit(S, "\[")
strsplit(S, "\\[")
sub("\\[","", S)
sub("[\\[,\\]","", S)
sub("[\\[, \\]","", S)
sub("\\]","", S)
sub("\\]'","", S)
sub("\\']","", S)
sub("'\\]","", S)
sub("'\\] \\['","", S)
sub("['\\] \\[']","", S)
sub("['\\], \\[']","", S)
sub("'\\]","", S)
sub("'\\]","", S)clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}
sub("'\\]","", S)clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}
sub("'\\]","", S)clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}
clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list)#
}
clean.string(S)
clean.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list[1])#
}
clean.string(S)
clean.string(S)[1]
clean.string(S)[1][1]
clean.string(S)[[1]]
clean.string(S)[[1]][1]
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)#
    #
    all.studies <- c(rct, obs)#
#
    print(all.studies)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    summary(small.g)#
    #
}
get.path.lengths.between.designs(G)
clean.my.python.list.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list[[1]])#
}
get.path.lengths.between.designs(G)
get.path.lengths.between.designs <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)#
    #
    all.studies <- c(rct, obs)#
#
    #print(all.studies)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    #
    return(small.g)#
}
get.path.lengths.between.designs(G)
get.path.lengths.between.designs(G)->l
L1 <- gimme.layout(l)
plot(l, layout=L1)
random()
rnd()
runiform
?random
??random
rnorm()
rnorm(100)
rnorm(1)
runi(1)
runif(1)
runif(n)
runifgimme.layout<- function(G) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- layout.spring(G)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
}
gimme.layout<- function(G) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- layout.spring(G)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
}
L1 <- gimme.layout(l)
plot(l, layout=L1)
plot(l, layout=L1, edge.width=0.5)
plot(l, layout=L1, edge.arrow.width=0.5)
plot(l, layout=L1, edge.arrow.width=0.2)
plot(l, layout=L1, edge.arrow.size=0.2)
betweenness.estimate(G)
betweenness.estimate(l)
betweenness.estimate(l, v(l))
betweenness.estimate(l, V(l))
betweenness.estimate(l, V(l), cutoff=0)
source('01_example.r')
source('01_example.r')
library(igraph)#
#
# take a graph and create a layout #
#
gimme.layout<- function(G) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- layout.spring(G)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
} #
#
#
get.vertex.index.from.attribute <- function(G, attribute.value, attribute.name = 'pmid'){#
    vertices <- V(G)#
    for (i in 0:(length(vertices)-1)){#
        att <- get.vertex.attribute(G, attribute.name, i)#
        if ((att == attribute.value)){#
            return(i)#
        }#
    }#
    #
    cat("Found no vertex with the specified attribute\n")#
    return(NULL)#
}#
#
clean.my.python.list.string <- function (S) {#
    S <- sub("'\\]","", S)#
    S <- sub("\\['","", S)#
    S.list <- strsplit(S,"', '")#
    return(S.list[[1]])#
}#
#
get.subgraph.of.index.studies <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    #
    return(small.g)#
}
get.subgraph.of.index.studies(G)
g <- get.subgraph.of.index.studies(G)
L <- gimme.layout(G)
L <- gimme.layout(g)
L <- gimme.layout(g)#
plot(g, layout=L)
get.subgraphs.of.index.studies <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):])#
    #
    return(c(all=small.g, rct=small.g.rct, obs=small.g.obs))#
}
get.subgraphs.of.index.studies <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):])#
    #
    return(c(all=small.g, rct=small.g.rct, obs=small.g.obs))#
}
get.subgraphs.of.index.studies <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[1:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):length(v.list)])#
    #
    return(c(all=small.g, rct=small.g.rct, obs=small.g.obs))#
}
get.subgraph.of.index.studies(G)
get.subgraph.of.index.studies(G) -> A
A$all
c(all=1)
c(all=1, new=2)
get.subgraphs.of.index.studies(G) -> A
A$all
A
get.subgraphs.of.index.studies <- function(G) {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[1:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):length(v.list)])#
    #
    return(c(small.g, small.g.rct, small.g.obs))#
}
get.subgraphs.of.index.studies(G) -> A
A
A[1]
A[[1]]
?elif
get.subgraphs.of.index.studies <- function(G, which='all') {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[1:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):length(v.list)])#
    #
    if (which == 'all'){#
        rs <- small.g#
    }#
    else if (which = 'rct'){#
        rs <- small.g.rct#
    } #
    else if (which = 'obs'){#
        rs <- small.g.obs#
    } #
#
    return(rs)#
}
get.subgraphs.of.index.studies <- function(G, which='all') {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[1:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):length(v.list)])#
    #
    if (which == 'all'){#
        rs <- small.g#
    }#
    else if (which = 'rct'){#
        rs <- small.g.rct#
    } #
    else if (which = 'obs'){#
        rs <- small.g.obs#
    } #
#
    return(rs)#
}
get.subgraphs.of.index.studies <- function(G, which='all') {#
    #
    rct <- clean.my.python.list.string(G$rct_pmid_list)#
    obs <- clean.my.python.list.string(G$obs_pmid_list)    #
    all.studies <- c(rct, obs)#
#
    v.list <- NULL#
    for (i in 1:length(all.studies)){#
        v.list[i] <- get.vertex.index.from.attribute(G,all.studies[i])#
    }#
    #
    small.g <- subgraph(G, v.list)#
    small.g.rct <- subgraph(G, v.list[1:length(rct)])#
    small.g.obs <- subgraph(G, v.list[length(rct):length(v.list)])#
    #
    if (which == 'all'){#
        rs <- small.g#
    }#
    else if (which == 'rct'){#
        rs <- small.g.rct#
    } #
    else if (which == 'obs'){#
        rs <- small.g.obs#
    } #
#
    return(rs)#
}
get.subgraphs.of.index.studies(G) -> A
A
get.subgraphs.of.index.studies(G, 'obs') -> A
get.subgraphs.of.index.studies(G, 'obs') -> A
A
get.subgraphs.of.index.studies(G, 'obs') -> g.obs
get.subgraphs.of.index.studies(G, 'rct') -> g.rct
get.subgraphs.of.index.studies(G, 'all') -> g
gimme.layout(g.obs) -> L.obs
gimme.layout(g.rct) -> L.rct
Lobs <- Lobs + 1
L.obs <- L.obs + matrix(1, dims=dim(L.obs))
L.obs <- L.obs + matrix(1, dim=dim(L.obs))
?matrix
L.obs <- L.obs + matrix(1, nrow=dim(L.obs)[1])
L.obs
L.obs[,'y'] <- L.obs[,'y'] + rep(1, length(L.obs[,'y']))
L.obs
L <- rbind(L.rct, L.obs)
plot(g, layout=L)
gimme.layout(g)
L
rownames(L) <- seq(1,23)
rownames(L) <- seq(1,23)
seq(1,5)
rownames(L) <- NULL
L
plot(g, layout=L)
gimme.layout<- function(G, offset=.5) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/20)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncols=2)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
}
gimme.layout(g)
matrix
gimme.layout<- function(G, offset=.5) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/20)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    return(L)#
}
gimme.layout(g)
g['is_index']
get.vertex.attribute(g, 'is_index', 1)
get.vertex.attributes(g)
get.vertex.attribute(g)
get.vertex.attribute_names(g)
g['rct_obs_list']
g['rct_mid_list']
g['rct_pmid_list']
g
V(g,1)
V(g)
gimme.layout<- function(G, offset=0) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/20)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    for (i in 0:(length(years-1)) {#
        V(G, i)#
        #
    }#
    #
    #
    return(L)#
}
gimme.layout<- function(G, offset=0) {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/20)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y#
    #
    #
    #
    return(L)#
}
gimme.layout(g)
plot(g, layout=gimme.layout(g))
plot(g, layout=gimme.layout(g))
get.vertex.attribute(g, 'color', 'red')
get.vertex.attribute(g, 'color')
get.vertex.attribute(g, 'color')=='red'
gimme.layout<- function(G, offset=0, att.name = 'color', att.val='red') {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/20)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    add.offset <- (get.vertex.attribute(g, att.name)==att.val) * rep(offset, length(years))#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y + add.offset#
    #
    #
    return(L)#
}
plot(g, layout=gimme.layout(g))
gimme.layout(g)
plot(g, layout=gimme.layout(g, offset=.5))
plot(g, layout=gimme.layout(g))
plot(g, layout=gimme.layout(g, offset=.5))
plot(g, layout=gimme.layout(g, offset=.5))
gimme.layout<- function(G, offset=0.5, att.name = 'color', att.val='red') {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    add.offset <- (get.vertex.attribute(g, att.name)==att.val) * rep(offset, length(years))#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y + add.offset#
    #
    #
    return(L)#
}
plot(g, layout=gimme.layout(g, offset=.5))
plot(g, layout=gimme.layout(g, offset=.5))
plot(g, layout=gimme.layout(g, offset=0))
plot(g, layout=gimme.layout(g, offset=1))
plot(g, layout=gimme.layout(g, offset=.2))
plot(g, layout=gimme.layout(g, offset=.2))
gimme.layout<- function(G, offset=0.5, att.name = 'color', att.val='red') {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    add.offset <- (get.vertex.attribute(g, att.name)==att.val) * rep(offset*Y.spread, length(years))#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y + add.offset#
    #
    #
    return(L)#
}
plot(g, layout=gimme.layout(g, offset=.2))
plot(g, layout=gimme.layout(g, offset=1))
plot(g, layout=gimme.layout(g, offset=1))
plot(g, layout=gimme.layout(g))
plot(g, layout=gimme.layout(g, offset=.1))
#
gimme.layout<- function(G, offset=0.1, att.name = 'color', att.val='red') {#
    #
    years <- get.vertex.attribute(G,'year')#
    #
    min.year <- min(years)#
    max.year <- max(years)#
    how.many.per.year <- NULL#
    for (i in min.year:max.year) {#
        how.many.per.year <- c(how.many.per.year,sum(years==i))#
    }#
#
    Y.spread<-max(how.many.per.year)#
    Y <- NULL#
    for (i in 1:length(how.many.per.year)) {#
        if (how.many.per.year[i]>0) {#
            y <- seq.int(1,how.many.per.year[i], 1)  #
            Y <- c(Y, (y-mean(y) + runif(1)/5)/Y.spread)#
        }#
    }#
    #
    #
    for (v in 0:(length(years)-1)) {#
        vertex.year<-get.vertex.attribute(G,'year',v)#
        number.this.year <- how.many.per.year[vertex.year - min.year + 1]#
        #
    }#
    #
    add.offset <- ((get.vertex.attribute(g, att.name)==att.val) - rep(.5, length(years)))* rep(offset*Y.spread, length(years))#
    #
    #
    L <- matrix(rep(1,2*length(years)),ncol=2)#
    L[,1] <- years#
    L[,2] <- Y + add.offset#
    #
    #
    return(L)#
}
plot(g, layout=gimme.layout(g, offset=.1))
plot(g, layout=gimme.layout(g, offset=.1))
authority.score(g)
$vector
authority.score(g)$vector
authority.score(g)$vector==1
authority.score(G)$vector==1
